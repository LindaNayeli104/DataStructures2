
public class Recursion {

	public  <E extends Comparable<E>> E min (E[] arr) {
		return min(arr, 0);
	}
	
	
	public  <E extends Comparable<E>> E min (E[] arr, int i) {
		if(i==arr.length-1) {
			return arr[i];
		}else {
			return arr[i].compareTo(min(arr, i+1))<0 ? arr[i] : min(arr, i+1);
		}
	}
	
	
	public static void main(String[] args) {
		int[] arr = {103,105,103, 100, 150};
		System.out.println(min(arr));
	}
	
}


/*
public static <E extends Comparable<E>> E min (E[] arr) {

}


public static <E extends Comparable<E>> E min (E[] arr, int i) {
	
}




public static int min (int[] arr) {
		return min(arr, 0);
	}
	
	
	public static int min (int[] arr, int i) {
		if(i==arr.length-1) {
			return arr[i];
		}else {
			return arr[i]<min(arr, i+1) ? arr[i] : min(arr, i+1);
		}
	}
	
	
	public static void main(String[] args) {
		int[] arr = {103,105,103, 100, 150};
		System.out.println(min(arr));
	}
*/